{% set version = "2.10.12" %}

package:
  name: coin-or-cbc-meta
  version: {{ version }}

source:
  url: https://github.com/coin-or/Cbc/archive/releases/{{ version }}.tar.gz
  sha256: 9ed71e4b61668462fc3794c102e26b4bb01a047efbbbcbd69ae7bde1f04f46a8
  patches:
    - patches/0001-Patch-for-downstream.patch

build:
  number: 4

outputs:
  - name: coin-or-cbc
    script: build_package.sh  # [unix]
    script: build_package.bat  # [win]
    build:
      run_exports:
        - {{ pin_subpackage("coin-or-cbc", max_pin='x.x') }}

    requirements:
      build:
        - gnuconfig  # [unix]
        - {{ compiler('c') }}
        - {{ stdlib('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('fortran') }}  # [unix]
        - pkg-config  # [unix]
        - make  # [unix]
        - m2-make  # [win]
        - m2-pkg-config  # [win]
        - m2-grep  # [win]
        - m2-sed  # [win]
        - m2-bash  # [win]
        - m2-base  # [win]
      host:
        - coin-or-cgl
        - coin-or-clp
        - coin-or-osi
        - coin-or-utils
        - zlib
        - bzip2      
      run_constrained:
        - coincbc * *_metapackage

    test:
      commands:
        - test -f $PREFIX/lib/libCbc${SHLIB_EXT}  # [unix]
        - test -f $PREFIX/include/coin/CbcConfig.h  # [unix]
        - test -f $PREFIX/lib/libCbcSolver${SHLIB_EXT}  # [unix]
        - test -f $PREFIX/lib/libOsiCbc${SHLIB_EXT}  # [unix]
        - if not exist %LIBRARY_LIB%/libCbc.lib exit 1  # [win]
        - if not exist %LIBRARY_LIB%/libCbcSolver.lib exit 1  # [win]
        - if not exist %LIBRARY_LIB%/libOsiCbc.lib exit 1  # [win]
        - if not exist %LIBRARY_INC%/coin/CbcConfig.h exit 1  # [win]
        - strings %LIBRARY_LIB%\\libCoinUtils.lib | findstr /C:"RuntimeLibrary=MD"  # [win]
      requires:
        - binutils  # [win]

    about:
      home: https://github.com/coin-or/Cbc
      dev_url: https://github.com/coin-or/Cbc
      license: EPL-2.0
      license_family: OTHER
      license_file: LICENSE
      summary: COIN-OR branch and cut (Cbc)
      description: |
        Cbc (Coin-or branch and cut) is an open-source mixed integer linear
        programming solver written in C++. It can be used as a callable library or
        using a stand-alone executable. It can be called through AIMMS (through the
        AIMMSlinks project), AMPL (natively), CMPL, GAMS (through the GAMSlinks
        project), JuMP, Mathematica, MiniZinc, MPL (through the CoinMP project), PuLP,
        Python (e.g., cbcpy), and OpenSolver for Excel, among others.

  - name: coincbc
    build:
      noarch: generic
      string: {{ PKG_BUILDNUM }}_metapackage
      run_exports:
        - {{ pin_subpackage("coin-or-cbc", max_pin='x.x') }}
    requirements:
      run:
        - coin-or-cbc {{ version }}
    test:
      commands:
        - test -f $PREFIX/lib/libCbc${SHLIB_EXT}  # [unix]
        - if not exist %LIBRARY_LIB%/libCbc.lib exit 1  # [win]

about:
  home: https://github.com/coin-or/Cbc
  dev_url: https://github.com/coin-or/Cbc
  license: EPL-2.0
  license_family: OTHER
  license_file: LICENSE
  summary: COIN-OR branch and cut (Cbc)
  description: |
    Cbc (Coin-or branch and cut) is an open-source mixed integer linear
    programming solver written in C++. It can be used as a callable library or
    using a stand-alone executable. It can be called through AIMMS (through the
    AIMMSlinks project), AMPL (natively), CMPL, GAMS (through the GAMSlinks
    project), JuMP, Mathematica, MiniZinc, MPL (through the CoinMP project), PuLP,
    Python (e.g., cbcpy), and OpenSolver for Excel, among others.


extra:
  recipe-maintainers:
    - wolfv
    - tkralphs
    - h-vetinari
  feedstock-name: coin-or-cbc
